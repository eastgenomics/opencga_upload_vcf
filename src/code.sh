#!/bin/bash
# opencga-upload-v1 1.0
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.

main() {

    echo "Value of input_vcf_file: '${input_vcf_file[@]}'"
    echo "Value of input_config_file: '$input_config_file'"

    # install java
    sudo apt install openjdk-16-jre-headless -y
    # unpack opencga
    tar -xzf /home/dnanexus/opencga-client-2.1.0-rc2_v1.tar.gz

    dx download "$input_config_file" -o input_config_file

    for i in ${!input_vcf_file[@]}
    do
        dx download "${input_vcf_file[$i]}"
        echo "Downloaded"
        cmd="dx describe '${input_vcf_file[$i]}' --name"
        echo $cmd
        filename=$(eval $cmd)
        echo "Filename is $filename"
        cmd="opencga-upload-v1.sh -i /home/dnanexus/${filename} -p /home/dnanexus/input_config_file -o /home/dnanexus/output_file"
	echo $cmd
	eval $cmd
        rm ${filename}
    done

    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    output_file=$(dx upload output_file --brief)

    dx-jobutil-add-output output_file "$output_file" --class=file
}
